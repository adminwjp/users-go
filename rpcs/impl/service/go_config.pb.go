// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: go_config.proto

package service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CEmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CEmptyRequest) Reset() {
	*x = CEmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEmptyRequest) ProtoMessage() {}

func (x *CEmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEmptyRequest.ProtoReflect.Descriptor instead.
func (*CEmptyRequest) Descriptor() ([]byte, []int) {
	return file_go_config_proto_rawDescGZIP(), []int{0}
}

type DbRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DefaultDb string `protobuf:"bytes,2,opt,name=default_db,json=defaultDb,proto3" json:"default_db,omitempty"`
	Db        string `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	Ip        uint64 `protobuf:"varint,4,opt,name=ip,proto3" json:"ip,omitempty"`
	IpString  string `protobuf:"bytes,5,opt,name=ip_string,json=ipString,proto3" json:"ip_string,omitempty"`
	Port      uint32 `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	Count     uint64 `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	MaxCount  uint64 `protobuf:"varint,8,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`
	Space     uint64 `protobuf:"varint,9,opt,name=space,proto3" json:"space,omitempty"`
	StartId   uint64 `protobuf:"varint,10,opt,name=start_id,json=startId,proto3" json:"start_id,omitempty"`
	EndId     uint64 `protobuf:"varint,11,opt,name=end_id,json=endId,proto3" json:"end_id,omitempty"`
	Table     string `protobuf:"bytes,12,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *DbRequest) Reset() {
	*x = DbRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbRequest) ProtoMessage() {}

func (x *DbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbRequest.ProtoReflect.Descriptor instead.
func (*DbRequest) Descriptor() ([]byte, []int) {
	return file_go_config_proto_rawDescGZIP(), []int{1}
}

func (x *DbRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DbRequest) GetDefaultDb() string {
	if x != nil {
		return x.DefaultDb
	}
	return ""
}

func (x *DbRequest) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *DbRequest) GetIp() uint64 {
	if x != nil {
		return x.Ip
	}
	return 0
}

func (x *DbRequest) GetIpString() string {
	if x != nil {
		return x.IpString
	}
	return ""
}

func (x *DbRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DbRequest) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DbRequest) GetMaxCount() uint64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *DbRequest) GetSpace() uint64 {
	if x != nil {
		return x.Space
	}
	return 0
}

func (x *DbRequest) GetStartId() uint64 {
	if x != nil {
		return x.StartId
	}
	return 0
}

func (x *DbRequest) GetEndId() uint64 {
	if x != nil {
		return x.EndId
	}
	return 0
}

func (x *DbRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

type TableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DefaultDb    string `protobuf:"bytes,2,opt,name=default_db,json=defaultDb,proto3" json:"default_db,omitempty"`
	Db           string `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	Ip           uint64 `protobuf:"varint,4,opt,name=ip,proto3" json:"ip,omitempty"`
	IpString     string `protobuf:"bytes,5,opt,name=ip_string,json=ipString,proto3" json:"ip_string,omitempty"`
	Port         uint32 `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	Count        uint64 `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	MaxCount     uint64 `protobuf:"varint,8,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`
	Space        uint64 `protobuf:"varint,9,opt,name=space,proto3" json:"space,omitempty"`
	StartId      uint64 `protobuf:"varint,10,opt,name=start_id,json=startId,proto3" json:"start_id,omitempty"`
	EndId        uint64 `protobuf:"varint,11,opt,name=end_id,json=endId,proto3" json:"end_id,omitempty"`
	Table        string `protobuf:"bytes,12,opt,name=table,proto3" json:"table,omitempty"`
	DefaultTable string `protobuf:"bytes,13,opt,name=default_table,json=defaultTable,proto3" json:"default_table,omitempty"`
	Ids          string `protobuf:"bytes,14,opt,name=ids,proto3" json:"ids,omitempty"`
	DefaultIds   string `protobuf:"bytes,15,opt,name=default_ids,json=defaultIds,proto3" json:"default_ids,omitempty"`
}

func (x *TableRequest) Reset() {
	*x = TableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableRequest) ProtoMessage() {}

func (x *TableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableRequest.ProtoReflect.Descriptor instead.
func (*TableRequest) Descriptor() ([]byte, []int) {
	return file_go_config_proto_rawDescGZIP(), []int{2}
}

func (x *TableRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TableRequest) GetDefaultDb() string {
	if x != nil {
		return x.DefaultDb
	}
	return ""
}

func (x *TableRequest) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *TableRequest) GetIp() uint64 {
	if x != nil {
		return x.Ip
	}
	return 0
}

func (x *TableRequest) GetIpString() string {
	if x != nil {
		return x.IpString
	}
	return ""
}

func (x *TableRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *TableRequest) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TableRequest) GetMaxCount() uint64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *TableRequest) GetSpace() uint64 {
	if x != nil {
		return x.Space
	}
	return 0
}

func (x *TableRequest) GetStartId() uint64 {
	if x != nil {
		return x.StartId
	}
	return 0
}

func (x *TableRequest) GetEndId() uint64 {
	if x != nil {
		return x.EndId
	}
	return 0
}

func (x *TableRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *TableRequest) GetDefaultTable() string {
	if x != nil {
		return x.DefaultTable
	}
	return ""
}

func (x *TableRequest) GetIds() string {
	if x != nil {
		return x.Ids
	}
	return ""
}

func (x *TableRequest) GetDefaultIds() string {
	if x != nil {
		return x.DefaultIds
	}
	return ""
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_go_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_go_config_proto_rawDescGZIP(), []int{3}
}

func (x *Reply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Reply) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_go_config_proto protoreflect.FileDescriptor

var file_go_config_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9c, 0x02, 0x0a, 0x09,
	0x44, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xf7, 0x02, 0x0a, 0x0c, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xd8, 0x01, 0x0a, 0x11, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x53, 0x61, 0x76, 0x65, 0x44, 0x62, 0x12, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x2e, 0x44, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a,
	0x07, 0x53, 0x61, 0x76, 0x65, 0x54, 0x61, 0x62, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x30, 0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x62, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x2e, 0x43, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x31, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x12, 0x16, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x43, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x54, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x6c, 0x6c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x67,
	0x6f, 0x75, 0x73, 0x65, 0x72, 0x5a, 0x0c, 0x69, 0x6d, 0x70, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0xaa, 0x02, 0x24, 0x43, 0x6f, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x73,
	0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_go_config_proto_rawDescOnce sync.Once
	file_go_config_proto_rawDescData = file_go_config_proto_rawDesc
)

func file_go_config_proto_rawDescGZIP() []byte {
	file_go_config_proto_rawDescOnce.Do(func() {
		file_go_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_config_proto_rawDescData)
	})
	return file_go_config_proto_rawDescData
}

var file_go_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_go_config_proto_goTypes = []interface{}{
	(*CEmptyRequest)(nil), // 0: configs.CEmptyRequest
	(*DbRequest)(nil),     // 1: configs.DbRequest
	(*TableRequest)(nil),  // 2: configs.TableRequest
	(*Reply)(nil),         // 3: configs.Reply
}
var file_go_config_proto_depIdxs = []int32{
	1, // 0: configs.ConfigGrpcService.SaveDb:input_type -> configs.DbRequest
	2, // 1: configs.ConfigGrpcService.SaveTab:input_type -> configs.TableRequest
	0, // 2: configs.ConfigGrpcService.ListDb:input_type -> configs.CEmptyRequest
	0, // 3: configs.ConfigGrpcService.ListTab:input_type -> configs.CEmptyRequest
	3, // 4: configs.ConfigGrpcService.SaveDb:output_type -> configs.Reply
	3, // 5: configs.ConfigGrpcService.SaveTab:output_type -> configs.Reply
	3, // 6: configs.ConfigGrpcService.ListDb:output_type -> configs.Reply
	3, // 7: configs.ConfigGrpcService.ListTab:output_type -> configs.Reply
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_go_config_proto_init() }
func file_go_config_proto_init() {
	if File_go_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_go_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DbRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_config_proto_goTypes,
		DependencyIndexes: file_go_config_proto_depIdxs,
		MessageInfos:      file_go_config_proto_msgTypes,
	}.Build()
	File_go_config_proto = out.File
	file_go_config_proto_rawDesc = nil
	file_go_config_proto_goTypes = nil
	file_go_config_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConfigGrpcServiceClient is the client API for ConfigGrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigGrpcServiceClient interface {
	SaveDb(ctx context.Context, in *DbRequest, opts ...grpc.CallOption) (*Reply, error)
	SaveTab(ctx context.Context, in *TableRequest, opts ...grpc.CallOption) (*Reply, error)
	ListDb(ctx context.Context, in *CEmptyRequest, opts ...grpc.CallOption) (*Reply, error)
	ListTab(ctx context.Context, in *CEmptyRequest, opts ...grpc.CallOption) (*Reply, error)
}

type configGrpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewConfigGrpcServiceClient(cc grpc.ClientConnInterface) ConfigGrpcServiceClient {
	return &configGrpcServiceClient{cc}
}

func (c *configGrpcServiceClient) SaveDb(ctx context.Context, in *DbRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/configs.ConfigGrpcService/SaveDb", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configGrpcServiceClient) SaveTab(ctx context.Context, in *TableRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/configs.ConfigGrpcService/SaveTab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configGrpcServiceClient) ListDb(ctx context.Context, in *CEmptyRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/configs.ConfigGrpcService/ListDb", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configGrpcServiceClient) ListTab(ctx context.Context, in *CEmptyRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/configs.ConfigGrpcService/ListTab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigGrpcServiceServer is the server API for ConfigGrpcService service.
type ConfigGrpcServiceServer interface {
	SaveDb(context.Context, *DbRequest) (*Reply, error)
	SaveTab(context.Context, *TableRequest) (*Reply, error)
	ListDb(context.Context, *CEmptyRequest) (*Reply, error)
	ListTab(context.Context, *CEmptyRequest) (*Reply, error)
}

// UnimplementedConfigGrpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConfigGrpcServiceServer struct {
}

func (*UnimplementedConfigGrpcServiceServer) SaveDb(context.Context, *DbRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveDb not implemented")
}
func (*UnimplementedConfigGrpcServiceServer) SaveTab(context.Context, *TableRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveTab not implemented")
}
func (*UnimplementedConfigGrpcServiceServer) ListDb(context.Context, *CEmptyRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDb not implemented")
}
func (*UnimplementedConfigGrpcServiceServer) ListTab(context.Context, *CEmptyRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTab not implemented")
}

func RegisterConfigGrpcServiceServer(s *grpc.Server, srv ConfigGrpcServiceServer) {
	s.RegisterService(&_ConfigGrpcService_serviceDesc, srv)
}

func _ConfigGrpcService_SaveDb_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DbRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigGrpcServiceServer).SaveDb(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configs.ConfigGrpcService/SaveDb",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigGrpcServiceServer).SaveDb(ctx, req.(*DbRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigGrpcService_SaveTab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigGrpcServiceServer).SaveTab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configs.ConfigGrpcService/SaveTab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigGrpcServiceServer).SaveTab(ctx, req.(*TableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigGrpcService_ListDb_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CEmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigGrpcServiceServer).ListDb(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configs.ConfigGrpcService/ListDb",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigGrpcServiceServer).ListDb(ctx, req.(*CEmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigGrpcService_ListTab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CEmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigGrpcServiceServer).ListTab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configs.ConfigGrpcService/ListTab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigGrpcServiceServer).ListTab(ctx, req.(*CEmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigGrpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "configs.ConfigGrpcService",
	HandlerType: (*ConfigGrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveDb",
			Handler:    _ConfigGrpcService_SaveDb_Handler,
		},
		{
			MethodName: "SaveTab",
			Handler:    _ConfigGrpcService_SaveTab_Handler,
		},
		{
			MethodName: "ListDb",
			Handler:    _ConfigGrpcService_ListDb_Handler,
		},
		{
			MethodName: "ListTab",
			Handler:    _ConfigGrpcService_ListTab_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go_config.proto",
}
