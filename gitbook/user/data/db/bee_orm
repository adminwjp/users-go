###### bee orm

```go
import (
	"github.com/Unknwon/goconfig"
	"github.com/adminwjp/infrastructure-go/util"
	"github.com/adminwjp/users-go/model"
	"github.com/beego/beego/v2/client/orm"
	_ "github.com/go-sql-driver/mysql"
	_ "github.com/mattn/go-sqlite3"
	"log"
	"strings"
)

type BeeOrmConfig struct {
}

func (beeOrmConfig *BeeOrmConfig)Register()  {

}
func (beeOrmConfig *BeeOrmConfig) UpdateDbByIni(cfg *goconfig.ConfigFile,migr bool) {
	dialet:=util.ConfigUtil.GetStringValue(cfg,"Db","Dialet","")
	addrs:=util.ConfigUtil.GetStringValue(cfg,"Db","Addrs","")
	beeOrmConfig.UpdateDb(dialet,addrs,true,migr)
}
func (beeOrmConfig *BeeOrmConfig) UpdateDb(dialect string,connectionString string,debug bool ,migr bool) {

	if debug{
		//sql show
		orm.Debug=true
	}
	//db=db.Logger
	if migr{
		// 需要在init中注册定义的model
		orm.RegisterModel(new(model.UserModel),new(model.UserLogModel),new (model.AdminModel),
			new(model.RoleModel),new(model.AdminLogModel),//new(IdModel),
			new(model.EmailModel))
	}
	if strings.Contains(dialect,"mysql"){
		orm.RegisterDriver("mysql", orm.DRMySQL)
	}else if strings.Contains(dialect,"sqlite"){
		orm.RegisterDriver("sqlite3", orm.DRSqlite)
	}else if strings.Contains(dialect,"postgres"){
		orm.RegisterDriver("postgres", orm.DRPostgres)
	}else if strings.Contains(dialect,"oracle"){
		orm.RegisterDriver("oracle", orm.DROracle)
	}else if strings.Contains(dialect,"tidb"){
		orm.RegisterDriver("tidb", orm.DRTiDB)
	}
	//orm.RegisterDriver("mysql", orm.DRMySQL)
	//orm.RegisterDataBase("default", "mysql", "root:wjp930514.W@(192.168.1.4:3306)/bee?charset=utf8")

	//orm.DR_Sqlite undefined
	//orm.RegisterDriver("sqlite3", orm.DRSqlite)
	//orm.RegisterDataBase("default", "sqlite3", "E:/work/db/sqlite/bee.sqlite3")
	//orm.RegisterDataBase("default", "sqlite3", "/home/program/db/sqlite/bee.sqlite3")

	 err := orm.RegisterDataBase("default", dialect, connectionString)
	if err!= nil{
		log.Printf("bee orm dialect => %s connectionString => %s, connection database fail",
			dialect,connectionString)
		panic(err)
	}

	orm.RunSyncdb("default", false, true)
	//orm.DefaultTimeLoc = time.UTC
}
```
